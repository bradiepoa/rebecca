# Generated by Django 3.1.2 on 2022-04-24 14:39

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('patient_id', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('cleared', 'Cleared')], default='pending', max_length=200, null=True)),
                ('Paid_Date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Department_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('DateAdded', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=200)),
                ('Description', models.TextField(blank=True, null=True)),
                ('AddedDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Emergency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('Phone_Number', models.CharField(blank=True, max_length=15, null=True)),
                ('patient_id', models.CharField(blank=True, max_length=100, null=True)),
                ('Hospital', models.CharField(blank=True, max_length=200, null=True)),
                ('Location_Discription', models.TextField(blank=True, null=True)),
                ('Request_Date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('declined', 'Declined'), ('pending', 'Pending'), ('picked', 'Picked')], default='pending', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Hospital_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, choices=[('clinic', 'Clinic'), ('hospital', 'Hospital'), ('refferel', 'Refferel')], default='none', max_length=200, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('Contact', models.CharField(blank=True, max_length=200, null=True)),
                ('image', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Hospital_Loacation', models.CharField(blank=True, max_length=200, null=True)),
                ('DateAdded', models.DateField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('available', 'Available'), ('none', 'None')], default='none', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Our_Patients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('Date_Of_Birth', models.CharField(blank=True, max_length=200, null=True)),
                ('age', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(blank=True, max_length=200, null=True)),
                ('gender', models.CharField(blank=True, choices=[('female', 'Female'), ('male', 'Male')], default='female', max_length=200, null=True)),
                ('patient_id', models.CharField(blank=True, max_length=2000, null=True)),
                ('status', models.CharField(blank=True, choices=[('on hold', 'On Hold'), ('admitted', 'Admitted'), ('discharged', 'Discharged')], default='on hold', max_length=200, null=True)),
                ('image', models.ImageField(upload_to='patients')),
                ('DateAdded', models.DateTimeField(auto_now_add=True)),
                ('Address', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='gettreat.location')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gettreat.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Our_Doctors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Doctors_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('DepartmentName', models.ManyToManyField(to='gettreat.Departments')),
                ('Hospital_Name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gettreat.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('Added_Date', models.DateField(auto_now_add=True)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gettreat.disease')),
            ],
        ),
        migrations.CreateModel(
            name='Hospital_Services',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Service_Offered', models.CharField(blank=True, max_length=200, null=True)),
                ('Departments', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gettreat.departments')),
                ('Hospital_Name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gettreat.hospital')),
            ],
        ),
        migrations.AddField(
            model_name='hospital',
            name='Hospital_Loacation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gettreat.location'),
        ),
        migrations.CreateModel(
            name='Appointments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('patient_id', models.CharField(blank=True, max_length=2000, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('Immediete_phone', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, choices=[('accepted', 'Accepted'), ('pending', 'Pending'), ('declined', 'Declined')], default='pending', max_length=200, null=True)),
                ('AddedDate', models.DateField(auto_now_add=True)),
                ('Hospital_Name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gettreat.hospital')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gettreat.location')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_hospital', models.BooleanField(default=False)),
                ('is_patient', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
